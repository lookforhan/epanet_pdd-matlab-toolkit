% unitTest for  generate_damage_random
% toolkit_start() first!!
% too many inputArgs !!!
% use the GWSL.INP as an example!
clear;clc;close all;
RR_data = readtable('GWSL_4_RR_IX.txt');
mid_pipe_id = RR_data.PipeID;
pipe_id = cellfun(@(x)num2str(x),num2cell(mid_pipe_id),'UniformOutput',false);
inputArg1 = pipe_id;
inputArg2 = RR_data.Material;
inputArg3 = RR_data.Length_km_;
inputArg4 = RR_data.Diameter_mm_;
inputArg5 = RR_data.RR;
damage_probability = 1-exp(-RR_data.RR.*RR_data.Length_km_);% º∆À„∆∆ªµ∏≈¬ 
break_probability = 0.2*damage_probability;
leak_probability = 0.8*damage_probability;
inputArg6 = break_probability;
inputArg7 = leak_probability;
% test for construction of the object (pass)
gdr = generate_damage_random(inputArg1,...
    inputArg2,...
    inputArg3,...
    inputArg4,...
    inputArg5,...
    inputArg6,...
    inputArg7);
gdr.delete
% test for the method of LeakAreaByType (pass)
MC_NUM = 1;Link_num = numel(RR_data.PipeID);
rand_value =  unifrnd(0,1,[MC_NUM,Link_num]);
gdr2 = generate_damage_random(inputArg1,...
    inputArg2,...
    inputArg3,...
    inputArg4,...
    inputArg5,...
    inputArg6,...
    inputArg7);
[pipe_damage_data,table] = gdr2.LeakAreaByType(rand_value');
gdr2.delete
% test for the method of weightedMeanLeakArea (pass£©
MC_NUM = 1;Link_num = numel(RR_data.PipeID);
rand_value =  unifrnd(0,1,[MC_NUM,Link_num]);
gdr3 = generate_damage_random(inputArg1,...
    inputArg2,...
    inputArg3,...
    inputArg4,...
    inputArg5,...
    inputArg6,...
    inputArg7);
[pipe_damage_data,table] = gdr3.weightedMeanLeakArea(rand_value');
gdr3.delete